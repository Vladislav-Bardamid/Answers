{
  "questions": [
    {
      "Text": "1. В типовой архитектуре приложения к уровню логики приложения относятся:",
      "Variants": [
        "фасад приложения",
        "бизнес компоненты"
      ],
      "ImageSrc": "levels.png"
    },
    {
      "Text": "2. В типовой архитектуре приложения к уровню представления приложения относятся:",
      "Variants": [
        "компоненты логики представления",
        "компоненты интерфейса пользователя"
      ],
      "ImageSrc": "levels.png"
    },
    {
      "Text": "3. В типовой архитектуре приложения к уровню сервисов приложения относятся:",
      "Variants": [
        "интерфейсы сервисов",
        "типы сообщений"
      ],
      "ImageSrc": "levels.png"
    },
    {
      "Text": "4. В типовой архитектуре приложения к уровню доступа к данным приложения относятся:",
      "Variants": [
        "компоненты доступа к данным",
        "вспомогательные средства работы с данными",
        "агенты сервисов"
      ],
      "ImageSrc": "levels.png"
    },
    {
      "Text": "5. В типовой архитектуре приложения к уровню сквозной функциональности приложения относятся:",
      "Variants": [
        "связь",
        "безопасность",
        "операционное управление"
      ],
      "ImageSrc": "levels.png"
    },
    {
      "Text": "6. Хорошая архитектура программного обеспечения должнаа",
      "Variants": [
        "раскрывать структуру системы",
        "реализовывать все варианты использования и сценарии",
        "по возможности отвечать всем требованиям различных заинтересованных сторон",
        "выполнять требования, как по функциональности, так и по качеству"
      ]
    },
    {
      "Text": "7. К основным принципам проектирования архитектуры ПО относятся: ",
      "Variants": [
        "принцип разделения функциональности для обеспечения высокой связность и слабой зависимости",
        "принцип единственности ответственности"
      ]
    },
    {
      "Text": "8. Основная цель дисциплины программной архитектуры является: ",
      "Variants": [
        "снижение сложности системы путем абстракции и разграничения полномочий",
        "создание программных систем с распределенной архитектурой"
      ]
    },
    {
      "Text": "9. Двоичная сериализация позволяет:",
      "Variants": [
        "преобразование состояния объекта в форму, пригодную для сохранения или передачи",
        "сохранять правильность типов",
        "применять удаленную передачу объектов \"по значению\""
      ]
    },
    {
      "Text": "10. Стандартная XML сериализация позволяет:",
      "Variants": [
        "преобразование состояния объекта в форму, пригодную для сохранения или передачи",
        "сохранять правильность типов",
        "применять удаленную передачу объектов \"по значению\"",
        "использовать только открытые свойства и поля"
      ]
    },
    {
      "Text": "11. Стандартная JSON сериализация позволяет:",
      "Variants": [
        "преобразование состояния объекта в форму, пригодную для сохранения или передачи",
        "сохранять правильность типов",
        "применять удаленную передачу объектов \"по значению\"",
        "использовать только открытые свойства и поля"
      ]
    },
    {
      "Text": "12. Укажите корректные правила именования для XML Element:",
      "Variants": [
        "имя тега должно начинаться с буквы или символа подчеркивания",
        "имя тега может содержать буквы, цифры, символ подчеркивания, переноса",
        "имя тега не может начинаться со строки «xml» в любом регистре"
      ]
    },
    {
      "Text": "13. Укажите корректные правила именования для атрибутов XML Element:",
      "Variants": [
        "имя атрибута должно начинаться с буквы или символа подчеркивания",
        "имя атрибута может содержать буквы, цифры, символ подчеркивания, переноса",
        "имя атрибута может начинаться со строки «xml» в любом регистре"
      ]
    },
    {
      "Text": "14. Укажите правильный синтаксис для XML Element:",
      "Variants": [
        "<tag>*[body]</tag>",
        "<tag attribName=“value“>*body</tag>"
      ]
    },
    {
      "Text": "15. В COM-технологии для обеспечения корректного взаимодействия многопоточного клиента и однопоточного сервера используют:",
      "Variants": [
        "апартменты (apartments)"
      ]
    },
    {
      "Text": "16. В COM-технологии информация о местонахождении COM-сервера находится:",
      "Variants": [
        "в реестре операционной системы"
      ]
    },
    {
      "Text": "17. В COM-технологии маршалинг (marshaling) используется для:",
      "Variants": [
        "упаковки и распаковки параметров методов во время вызова метода через границы процесса",
        "сохранения состояния объекта для последующего восстановления объекта в исходное состояние"
      ]
    },
    {
      "Text": "18. Если приложение использует COM-сервер, реализованный в виде DLL то это позволяет:",
      "Variants": [
        "уменьшить накладные расходы на вызов методов COM-объекта"
      ]
    },
    {
      "Text": "19. Если приложение использует COM-сервер, реализованный в виде EXE то это позволяет:",
      "Variants": [
        "увеличить надежность приложения"
      ]
    },
    {
      "Text": "20. К поведенческим шаблонам (Behavioral design patterns) относятся:",
      "Variants": [
        "Наблюдатель (Observer)"
      ]
    },
    {
      "Text": "21. К порождающим шаблонам (Creational design patterns) относятся:",
      "Variants": [
        "Отложенная инициализация (Lazy initialization)"
      ]
    },
    {
      "Text": "22. К структурным шаблонам (Structural design patterns) относятся:",
      "Variants": [
        "Шаблон Фасад (Facade)"
      ]
    },
    {
      "Text": "23. К шаблонам параллельного программирования (Concurrency design patterns) относятся:",
      "Variants": [
        "Блокировка с двойной проверкой (Double-checked locking);"
      ]
    },
    {
      "Text": "24. С помощью шаблонов проектирования:",
      "Variants": [
        "упрощается документирование архитектуры ПО",
        "рассматривают проблему на абстрактном уровне",
        "определяют точное решение проблемы"
      ]
    },
    {
      "Text": "25. Шаблоны проектирования, которые абстрагируют процесс создания экземпляра класса и позволяют сделать систему независимой от способа создания, композиции и представления объектов относятся к:",
      "Variants": [
        "Порождающим шаблонам (Creational design patterns)"
      ]
    },
    {
      "Text": "26. Шаблоны проектирования, которые определяют взаимодействие между объектами, увеличивая таким образом его гибкость, относятся к:",
      "Variants": [
        "Поведенческим шаблонам (Behavioral design patterns)"
      ]
    },
    {
      "Text": "27. Шаблоны проектирования, которые определяют различные сложные структуры, которые изменяют интерфейс уже существующих объектов или его реализацию, позволяя облегчить разработку и оптимизировать программу относятся к:",
      "Variants": [
        "Структурным шаблонам (Structural design patterns)"
      ]
    },
    {
      "Text": "28. Укажите анти-паттерн использования одного шаблона для решения всех возможных и невозможных задач:",
      "Variants": [
        "Hard code"
      ]
    },
    {
      "Text": "29. Укажите анти-паттерн смешения уровня бизнес-логики и представления:",
      "Variants": [
        "Magic pushbutton"
      ]
    },
    {
      "Text": "30. Эффективность применения многопоточности заключается:",
      "Variants": [
        "в разделении задач по приоритетам",
        "в выполнении длительных задач в фоновом режиме"
      ]
    },
    {
      "Text": "31 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "цепочка обязанностей"
      ],
      "ImageSrc": "chainOfResponsibility.png"
    },
    {
      "Text": "32 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "посетитель"
      ],
      "ImageSrc": "visitor.png"
    },
    {
      "Text": "33 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "шаблонный метод"
      ],
      "ImageSrc": "templateMethod.png"
    },
    {
      "Text": "34 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "стратегия"
      ],
      "ImageSrc": "strategy.png"
    },
    {
      "Text": "35 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "состояние"
      ],
      "ImageSrc": "state.png"
    },
    {
      "Text": "36 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "наблюдатель"
      ],
      "ImageSrc": "observer.png"
    },
    {
      "Text": "37 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "хранитель"
      ],
      "ImageSrc": "memento.png"
    },
    {
      "Text": "38 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "посредник"
      ],
      "ImageSrc": "mediator.png"
    },
    {
      "Text": "39 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "итератор"
      ],
      "ImageSrc": "iterator.png"
    },
    {
      "Text": "40 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "интерпретатор"
      ],
      "ImageSrc": "interpreter.png"
    },
    {
      "Text": "41 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "команда"
      ],
      "ImageSrc": "command.png"
    },
    {
      "Text": "42 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "одиночка"
      ],
      "ImageSrc": "singleton.png"
    },
    {
      "Text": "42 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "прототип"
      ],
      "ImageSrc": "prototype.png"
    },
    {
      "Text": "44 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "фабричный метод"
      ],
      "ImageSrc": "factoryMethod.png"
    },
    {
      "Text": "45 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "строитель"
      ],
      "ImageSrc": "builder.png"
    },
    {
      "Text": "46 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "абстрактная фабрика"
      ],
      "ImageSrc": "abstractFactory.png"
    },
    {
      "Text": "47 Какой шаблон проектирования представлен на рисунке",
      "Variants": [
        "прокси"
      ],
      "ImageSrc": "proxy.png"
    }
  ]
}
